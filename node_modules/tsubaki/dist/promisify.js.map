{"version":3,"file":"promisify.js","sourceRoot":"/","sources":["promisify.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAEtE;;;;GAIG;AACH,SAAgB,SAAS,CAAC,EAA2B;IACpD,OAAO,CAAC,GAAG,IAAW,EAAgB,EAAE,CACvC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;QAC5B,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAU,EAAE,GAAQ,EAAE,EAAE;YACpC,uEAAuE;YACvE,IAAI,GAAG;gBAAE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;YACzB,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AATD,8BASC;AAED,qGAAqG;AACrG,kBAAe,CAAC,EAA2B,EAAE,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC","sourcesContent":["const nodeVersion = parseInt(process.versions.node.split('.')[0], 10);\n\n/**\n * Promisifies a function\n * @param {Function} fn The function to promisify\n * @returns {Function} Promise based version of the original function\n */\nexport function promisify(fn: (...args: any[]) => any) {\n\treturn (...args: any[]): Promise<any> =>\n\t\tnew Promise((resolve, rej) => {\n\t\t\tfn(...args, (err: Error, res: any) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\t\t\t\tif (err) return rej(err);\n\t\t\t\treturn resolve(res);\n\t\t\t});\n\t\t});\n}\n\n// eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\nexport default (fn: (...args: any[]) => any) => (nodeVersion >= 8 ? require('util').promisify(fn) : promisify(fn));\n"]}